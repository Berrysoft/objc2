# This file has been automatically generated by `objc2`'s `header-translator`.
# DO NOT EDIT

[package]
name = "objc2-media-player"
version = "0.2.0" # Remember to update html_root_url in lib.rs
description = "Bindings to the MediaPlayer framework"
edition = "2021"
rust-version = "1.60"
keywords = ["cocoa", "apple", "framework", "macos", "ios"]
categories = [
    "api-bindings",
    "development-tools::ffi",
    "external-ffi-bindings",
    "os::macos-apis",
]
repository = "https://github.com/madsmtm/objc2"
license = "MIT"

[lints]
workspace = true

[dependencies]
objc2 = { path = "../../crates/objc2", version = "0.5.0", default-features = false, features = ["apple"] }
block2 = { path = "../../crates/block2", version = "0.4.0", optional = true }
objc2-app-kit = { path = "../objc2-app-kit", version = "0.2.0", optional = true }
objc2-foundation = { path = "../objc2-foundation", version = "0.2.0" }

[package.metadata.docs.rs]
default-target = "aarch64-apple-darwin"
features = ["all", "unstable-docsrs"]
targets = [
    "aarch64-apple-darwin",
    "x86_64-apple-darwin",
    "aarch64-apple-ios",
    "aarch64-apple-tvos",
    "aarch64-apple-watchos",
    "aarch64-apple-ios-macabi",
]

[features]
default = ["std"]

# Currently not possible to turn off, put here for forwards compatibility.
std = ["alloc", "objc2/std"]
alloc = ["objc2/alloc"]

# For better documentation on docs.rs
unstable-docsrs = []
block2 = ["dep:block2"]
objc2-app-kit = ["dep:objc2-app-kit"]

MediaPlayer_AVFoundation_MPNowPlayingInfoLanguageOptionAdditions = []
MediaPlayer_AVPlayerItem_MediaPlayerAdditions = []
MediaPlayer_MPContentItem = ["objc2-foundation/Foundation_NSString"]
MediaPlayer_MPError = ["objc2-foundation/Foundation_NSString"]
MediaPlayer_MPMediaEntity = [
    "objc2-foundation/Foundation_NSObject",
    "objc2-foundation/Foundation_NSSet",
    "objc2-foundation/Foundation_NSString",
]
MediaPlayer_MPMediaItem = [
    "objc2-app-kit?/AppKit_NSImage",
    "objc2-foundation/Foundation_NSDate",
    "objc2-foundation/Foundation_NSGeometry",
    "objc2-foundation/Foundation_NSObject",
    "objc2-foundation/Foundation_NSString",
    "objc2-foundation/Foundation_NSURL",
]
MediaPlayer_MPMediaItemCollection = [
    "objc2-foundation/Foundation_NSArray",
    "objc2-foundation/Foundation_NSObject",
]
MediaPlayer_MPMediaLibrary = [
    "objc2-foundation/Foundation_NSArray",
    "objc2-foundation/Foundation_NSDate",
    "objc2-foundation/Foundation_NSError",
    "objc2-foundation/Foundation_NSObject",
    "objc2-foundation/Foundation_NSString",
    "objc2-foundation/Foundation_NSUUID",
]
MediaPlayer_MPMediaPickerController = []
MediaPlayer_MPMediaPlayback = [
    "objc2-foundation/Foundation_NSDate",
    "objc2-foundation/Foundation_NSString",
]
MediaPlayer_MPMediaPlaylist = [
    "objc2-foundation/Foundation_NSArray",
    "objc2-foundation/Foundation_NSError",
    "objc2-foundation/Foundation_NSObject",
    "objc2-foundation/Foundation_NSString",
]
MediaPlayer_MPMediaQuery = [
    "objc2-foundation/Foundation_NSArray",
    "objc2-foundation/Foundation_NSObject",
    "objc2-foundation/Foundation_NSSet",
    "objc2-foundation/Foundation_NSString",
]
MediaPlayer_MPMediaQuerySection = [
    "objc2-foundation/Foundation_NSObject",
    "objc2-foundation/Foundation_NSRange",
    "objc2-foundation/Foundation_NSString",
]
MediaPlayer_MPMoviePlayerController = []
MediaPlayer_MPMoviePlayerViewController = []
MediaPlayer_MPMusicPlayerApplicationController = [
    "objc2-foundation/Foundation_NSArray",
    "objc2-foundation/Foundation_NSError",
    "objc2-foundation/Foundation_NSString",
]
MediaPlayer_MPMusicPlayerController = [
    "objc2-foundation/Foundation_NSArray",
    "objc2-foundation/Foundation_NSError",
    "objc2-foundation/Foundation_NSNotification",
    "objc2-foundation/Foundation_NSString",
]
MediaPlayer_MPMusicPlayerQueueDescriptor = [
    "objc2-foundation/Foundation_NSArray",
    "objc2-foundation/Foundation_NSDate",
    "objc2-foundation/Foundation_NSDictionary",
    "objc2-foundation/Foundation_NSString",
]
MediaPlayer_MPNowPlayingInfoCenter = [
    "objc2-foundation/Foundation_NSDictionary",
    "objc2-foundation/Foundation_NSString",
]
MediaPlayer_MPNowPlayingInfoLanguageOption = [
    "objc2-foundation/Foundation_NSArray",
    "objc2-foundation/Foundation_NSString",
]
MediaPlayer_MPNowPlayingSession = ["objc2-foundation/Foundation_NSObject"]
MediaPlayer_MPPlayableContentDataSource = [
    "objc2-foundation/Foundation_NSError",
    "objc2-foundation/Foundation_NSIndexPath",
    "objc2-foundation/Foundation_NSString",
]
MediaPlayer_MPPlayableContentDelegate = [
    "objc2-foundation/Foundation_NSArray",
    "objc2-foundation/Foundation_NSError",
    "objc2-foundation/Foundation_NSIndexPath",
]
MediaPlayer_MPPlayableContentManager = [
    "objc2-foundation/Foundation_NSArray",
    "objc2-foundation/Foundation_NSString",
]
MediaPlayer_MPPlayableContentManagerContext = []
MediaPlayer_MPRemoteCommand = [
    "objc2-foundation/Foundation_NSArray",
    "objc2-foundation/Foundation_NSString",
    "objc2-foundation/Foundation_NSValue",
]
MediaPlayer_MPRemoteCommandCenter = []
MediaPlayer_MPRemoteCommandEvent = ["objc2-foundation/Foundation_NSDate"]
MediaPlayer_MPRemoteControlTypes = []
MediaPlayer_MPVolumeSettings = []
MediaPlayer_MPVolumeView = []
MediaPlayer_MediaPlayerDefines = []
MediaPlayer_NSUserActivity_MediaPlayerAdditions = [
    "objc2-foundation/Foundation_NSString",
    "objc2-foundation/Foundation_NSUserActivity",
]
all = [
    "MediaPlayer_AVFoundation_MPNowPlayingInfoLanguageOptionAdditions",
    "MediaPlayer_AVPlayerItem_MediaPlayerAdditions",
    "MediaPlayer_MPContentItem",
    "MediaPlayer_MPError",
    "MediaPlayer_MPMediaEntity",
    "MediaPlayer_MPMediaItem",
    "MediaPlayer_MPMediaItemCollection",
    "MediaPlayer_MPMediaLibrary",
    "MediaPlayer_MPMediaPickerController",
    "MediaPlayer_MPMediaPlayback",
    "MediaPlayer_MPMediaPlaylist",
    "MediaPlayer_MPMediaQuery",
    "MediaPlayer_MPMediaQuerySection",
    "MediaPlayer_MPMoviePlayerController",
    "MediaPlayer_MPMoviePlayerViewController",
    "MediaPlayer_MPMusicPlayerApplicationController",
    "MediaPlayer_MPMusicPlayerController",
    "MediaPlayer_MPMusicPlayerQueueDescriptor",
    "MediaPlayer_MPNowPlayingInfoCenter",
    "MediaPlayer_MPNowPlayingInfoLanguageOption",
    "MediaPlayer_MPNowPlayingSession",
    "MediaPlayer_MPPlayableContentDataSource",
    "MediaPlayer_MPPlayableContentDelegate",
    "MediaPlayer_MPPlayableContentManager",
    "MediaPlayer_MPPlayableContentManagerContext",
    "MediaPlayer_MPRemoteCommand",
    "MediaPlayer_MPRemoteCommandCenter",
    "MediaPlayer_MPRemoteCommandEvent",
    "MediaPlayer_MPRemoteControlTypes",
    "MediaPlayer_MPVolumeSettings",
    "MediaPlayer_MPVolumeView",
    "MediaPlayer_MediaPlayerDefines",
    "MediaPlayer_NSUserActivity_MediaPlayerAdditions",
    "block2",
    "objc2-app-kit",
]
