framework = "UIKit"
crate = "objc2-ui-kit"
required-dependencies = ["objc2-foundation"]
custom-lib-rs = true
maccatalyst = "13.0"
ios = "2.0"
tvos = "9.0"
watchos = "2.0"
visionos = "1.0"

# CF_RETURNS_NOT_RETAINED
fn.UIGraphicsGetCurrentContext.skipped = true
class.UIGraphicsRenderer.methods."contextWithFormat:".skipped = true

# Both property and method
class.NSDiffableDataSourceSectionSnapshot.methods.items.skipped = true

# Duplicated static
static.UIKeyInputF1.skipped = true

# These protocol impls would return the wrong types
class.NSTextStorage.skipped-protocols = ["NSCopying", "NSMutableCopying"]
# Subclasses `NSMutableAttributedString`, though I think this should
# actually be `InteriorMutable`?
class.NSTextStorage.mutability = "Mutable"

# These subclass a generic struct, and hence the type parameter defaults to
# `AnyObject`, which is not PartialEq, Eq nor Hash.
class.NSLayoutXAxisAnchor.derives = "Debug"
class.NSLayoutYAxisAnchor.derives = "Debug"
class.NSLayoutDimension.derives = "Debug"

# Different definitions depending on target
enum.NSImageResizingMode.skipped = true
enum.NSTextAlignment.skipped = true

# Duplicated parameter name
class.UIStepper.methods."dividerImageForLeftSegmentState:rightSegmentState:".skipped = true

# `UITrait` is kinda weird, it's a typedef to a generic on `AnyClass`
class.UITraitCollection.methods."changedTraitsFromTraitCollection:".skipped = true
class.UITraitCollection.methods.systemTraitsAffectingColorAppearance.skipped = true
class.UITraitCollection.methods.systemTraitsAffectingImageLookup.skipped = true
protocol.UITraitChangeObservable.methods."registerForTraitChanges:withHandler:".skipped = true
protocol.UITraitChangeObservable.methods."registerForTraitChanges:withTarget:action:".skipped = true
protocol.UITraitChangeObservable.methods."registerForTraitChanges:withAction:".skipped = true

# Duplicate properties
class.UIApplication.methods.statusBarStyle.skipped = true
class.UIApplication.methods.isStatusBarHidden.skipped = true
class.UIApplication.methods.statusBarOrientation.skipped = true
class.UIGestureRecognizer.methods.state.skipped = true

# Not allowed by orphan rules
class.NSAttributedString.skipped-protocols = ["NSItemProviderReading", "NSItemProviderWriting"]
class.NSUserActivity.skipped-protocols = ["NSItemProviderReading", "NSItemProviderWriting"]

# Requires MainThreadOnly, which I'm not sure UIImage is?
class.UIImage.skipped-protocols = ["UIItemProviderPresentationSizeProviding"]

# Type defaults to `c_int`, but value is `NSInteger`
enum.anonymous.constants.NSControlCharacterZeroAdvancementAction.skipped = true
enum.anonymous.constants.NSControlCharacterWhitespaceAction.skipped = true
enum.anonymous.constants.NSControlCharacterHorizontalTabAction.skipped = true
enum.anonymous.constants.NSControlCharacterLineBreakAction.skipped = true
enum.anonymous.constants.NSControlCharacterParagraphBreakAction.skipped = true
enum.anonymous.constants.NSControlCharacterContainerBreakAction.skipped = true

# Typedef to an enum, which our valus handle wrong
typedef.UITextWritingDirection.skipped = true
static.UITextWritingDirectionNatural.skipped = true
static.UITextWritingDirectionLeftToRight.skipped = true
static.UITextWritingDirectionRightToLeft.skipped = true

# Needs `CIColor`
class.UIColor.methods."colorWithCIColor:".skipped = true
class.UIColor.methods."initWithCIColor:".skipped = true
class.UIColor.methods.CIColor.skipped = true
class.CIColor.categories.UIKitAdditions.skipped = true

# Needs `CGColorRef`
class.UIColor.methods."colorWithCGColor:".skipped = true
class.UIColor.methods."initWithCGColor:".skipped = true
class.UIColor.methods.CGColor.skipped = true

# Needs `CIImage`
class.UIImage.methods."imageWithCIImage:".skipped = true
class.UIImage.methods."imageWithCIImage:scale:orientation:".skipped = true
class.UIImage.methods."initWithCIImage:".skipped = true
class.UIImage.methods."initWithCIImage:scale:orientation:".skipped = true
class.UIImage.methods.CIImage.skipped = true
class.CIImage.categories.UIKitAdditions.skipped = true

# Needs `CGImageRef`
class.UIImage.methods."imageWithCGImage:".skipped = true
class.UIImage.methods."imageWithCGImage:scale:orientation:".skipped = true
class.UIImage.methods."initWithCGImage:".skipped = true
class.UIImage.methods."initWithCGImage:scale:orientation:".skipped = true
class.UIImage.methods.CGImage.skipped = true

# Needs `AVAudioSession`
class.UIScene.methods."getDefaultAudioSessionWithCompletionHandler:".skipped = true

# Needs `INIntent`
protocol.UIApplicationDelegate.methods."application:handlerForIntent:".skipped = true
protocol.UIApplicationDelegate.methods."application:handleIntent:completionHandler:".skipped = true

# Needs `CTTextAlignment`
fn.NSTextAlignmentToCTTextAlignment.skipped = true
fn.NSTextAlignmentFromCTTextAlignment.skipped = true

# Needs `CGAffineTransform`
class.UIView.methods.transform = { skipped = true }
class.UIView.methods."setTransform:" = { skipped = true }

# Needs `CGPathRef`
class.UIBezierPath.methods."bezierPathWithCGPath:".skipped = true
class.UIBezierPath.methods.CGPath.skipped = true
class.UIBezierPath.methods."setCGPath:".skipped = true

# Needs `CGLineCap`
class.UIBezierPath.methods.lineCapStyle.skipped = true
class.UIBezierPath.methods."setLineCapStyle:".skipped = true

# Needs `CGLineJoin`
class.UIBezierPath.methods.lineJoinStyle.skipped = true
class.UIBezierPath.methods."setLineJoinStyle:".skipped = true

# Needs `CGBlendMode`
class.UIBezierPath.methods."fillWithBlendMode:alpha:".skipped = true
class.UIBezierPath.methods."strokeWithBlendMode:alpha:".skipped = true
class.UIGraphicsRendererContext.methods."fillRect:blendMode:".skipped = true
class.UIGraphicsRendererContext.methods."strokeRect:blendMode:".skipped = true
class.UIImage.methods."drawAtPoint:blendMode:alpha:".skipped = true
class.UIImage.methods."drawInRect:blendMode:alpha:".skipped = true
fn.UIRectFillUsingBlendMode.skipped = true
fn.UIRectFrameUsingBlendMode.skipped = true

# Needs `CFTimeInterval`
class.UIScreen.methods.calibratedLatency.skipped = true

# Needs `CGGlyph`
class.NSLayoutManager.methods."CGGlyphAtIndex:isValidIndex:".skipped = true
class.NSLayoutManager.methods."CGGlyphAtIndex:".skipped = true
class.NSLayoutManager.methods."glyphAtIndex:isValidIndex:".skipped = true
class.NSLayoutManager.methods."glyphAtIndex:".skipped = true
class.NSLayoutManager.methods."showCGGlyphs:positions:count:font:textMatrix:attributes:inContext:".skipped = true
class.NSLayoutManager.methods."showCGGlyphs:positions:count:font:matrix:attributes:inContext:".skipped = true
class.NSLayoutManager.methods."setGlyphs:properties:characterIndexes:font:forGlyphRange:".skipped = true
class.NSLayoutManager.methods."getGlyphsInRange:glyphs:properties:characterIndexes:bidiLevels:".skipped = true
class.NSLayoutManager.methods."glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:".skipped = true
class.NSLayoutManagerDelegate.methods."layoutManager:shouldGenerateGlyphs:properties:characterIndexes:font:forGlyphRange:".skipped = true
protocol.NSLayoutManagerDelegate.methods."layoutManager:shouldGenerateGlyphs:properties:characterIndexes:font:forGlyphRange:".skipped = true

# Needs `CGContextRef`
class.NSTextLayoutFragment.methods."drawAtPoint:inContext:".skipped = true
class.NSTextLineFragment.methods."drawAtPoint:inContext:".skipped = true
fn.UIGraphicsPushContext.skipped = true
class.UIGraphicsRendererContext.methods.CGContext.skipped = true
class.UIGraphicsRenderer.methods."prepareCGContext:withRendererContext:".skipped = true

# Protocols require that these are main thread only
class.UIDocumentBrowserTransitionController.mutability = "MainThreadOnly"
class.UIDocumentInteractionController.mutability = "MainThreadOnly"
class.UIToolTipInteraction.mutability = "MainThreadOnly"
class.UIWindowSceneActivationInteraction.mutability = "MainThreadOnly"
class.UITraitUserInterfaceIdiom.mutability = "MainThreadOnly"
class.UITraitUserInterfaceStyle.mutability = "MainThreadOnly"
class.UITraitLayoutDirection.mutability = "MainThreadOnly"
class.UITraitDisplayScale.mutability = "MainThreadOnly"
class.UITraitHorizontalSizeClass.mutability = "MainThreadOnly"
class.UITraitVerticalSizeClass.mutability = "MainThreadOnly"
class.UITraitForceTouchCapability.mutability = "MainThreadOnly"
class.UITraitPreferredContentSizeCategory.mutability = "MainThreadOnly"
class.UITraitDisplayGamut.mutability = "MainThreadOnly"
class.UITraitAccessibilityContrast.mutability = "MainThreadOnly"
class.UITraitUserInterfaceLevel.mutability = "MainThreadOnly"
class.UITraitLegibilityWeight.mutability = "MainThreadOnly"
class.UITraitActiveAppearance.mutability = "MainThreadOnly"
class.UITraitToolbarItemPresentationSize.mutability = "MainThreadOnly"
class.UITraitImageDynamicRange.mutability = "MainThreadOnly"
class.UITraitTypesettingLanguage.mutability = "MainThreadOnly"
class.UITraitSceneCaptureState.mutability = "MainThreadOnly"
