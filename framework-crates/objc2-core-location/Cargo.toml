# This file has been automatically generated by `objc2`'s `header-translator`.
# DO NOT EDIT

[package]
name = "objc2-core-location"
version = "0.2.0" # Remember to update html_root_url in lib.rs
description = "Bindings to the CoreLocation framework"
edition = "2021"
rust-version = "1.60"
keywords = ["cocoa", "apple", "framework", "macos", "ios"]
categories = [
    "api-bindings",
    "development-tools::ffi",
    "external-ffi-bindings",
    "os::macos-apis",
]
repository = "https://github.com/madsmtm/objc2"
license = "MIT"

[lints]
workspace = true

[dependencies]
objc2 = { path = "../../crates/objc2", version = "0.5.0", default-features = false, features = ["apple"] }
block2 = { path = "../../crates/block2", version = "0.4.0", optional = true }
objc2-contacts = { path = "../objc2-contacts", version = "0.2.0", optional = true }
objc2-foundation = { path = "../objc2-foundation", version = "0.2.0" }

[package.metadata.docs.rs]
default-target = "aarch64-apple-darwin"
features = ["all", "unstable-docsrs"]
targets = [
    "aarch64-apple-darwin",
    "x86_64-apple-darwin",
    "aarch64-apple-ios",
    "aarch64-apple-tvos",
    "aarch64-apple-watchos",
    "aarch64-apple-ios-macabi",
]

[features]
default = ["std"]

# Currently not possible to turn off, put here for forwards compatibility.
std = ["alloc", "objc2/std"]
alloc = ["objc2/alloc"]

# For better documentation on docs.rs
unstable-docsrs = []
block2 = ["dep:block2"]
objc2-contacts = ["dep:objc2-contacts"]

CoreLocation_CLAvailability = []
CoreLocation_CLBackgroundActivitySession = []
CoreLocation_CLBeaconIdentityCondition = [
    "objc2-foundation/Foundation_NSObject",
    "objc2-foundation/Foundation_NSUUID",
    "objc2-foundation/Foundation_NSValue",
]
CoreLocation_CLBeaconIdentityConstraint = [
    "objc2-foundation/Foundation_NSObject",
    "objc2-foundation/Foundation_NSUUID",
]
CoreLocation_CLBeaconRegion = [
    "objc2-foundation/Foundation_NSDate",
    "objc2-foundation/Foundation_NSDictionary",
    "objc2-foundation/Foundation_NSObject",
    "objc2-foundation/Foundation_NSString",
    "objc2-foundation/Foundation_NSUUID",
    "objc2-foundation/Foundation_NSValue",
]
CoreLocation_CLCircularGeographicCondition = ["objc2-foundation/Foundation_NSObject"]
CoreLocation_CLCircularRegion = [
    "objc2-foundation/Foundation_NSObject",
    "objc2-foundation/Foundation_NSString",
]
CoreLocation_CLCondition = ["objc2-foundation/Foundation_NSObject"]
CoreLocation_CLError = ["objc2-foundation/Foundation_NSString"]
CoreLocation_CLErrorDomain = ["objc2-foundation/Foundation_NSString"]
CoreLocation_CLGeocoder = [
    "objc2-contacts?/Contacts_CNPostalAddress",
    "objc2-foundation/Foundation_NSArray",
    "objc2-foundation/Foundation_NSDictionary",
    "objc2-foundation/Foundation_NSError",
    "objc2-foundation/Foundation_NSLocale",
    "objc2-foundation/Foundation_NSString",
]
CoreLocation_CLHeading = [
    "objc2-foundation/Foundation_NSDate",
    "objc2-foundation/Foundation_NSObject",
]
CoreLocation_CLLocation = [
    "objc2-foundation/Foundation_NSDate",
    "objc2-foundation/Foundation_NSObject",
]
CoreLocation_CLLocationManager = [
    "objc2-foundation/Foundation_NSArray",
    "objc2-foundation/Foundation_NSData",
    "objc2-foundation/Foundation_NSDate",
    "objc2-foundation/Foundation_NSError",
    "objc2-foundation/Foundation_NSSet",
    "objc2-foundation/Foundation_NSString",
]
CoreLocation_CLLocationManagerDelegate = [
    "objc2-foundation/Foundation_NSArray",
    "objc2-foundation/Foundation_NSError",
]
CoreLocation_CLLocationManager_CLVisitExtensions = []
CoreLocation_CLLocationPushServiceError = [
    "objc2-foundation/Foundation_NSError",
    "objc2-foundation/Foundation_NSString",
]
CoreLocation_CLLocationPushServiceExtension = [
    "objc2-foundation/Foundation_NSDictionary",
    "objc2-foundation/Foundation_NSString",
]
CoreLocation_CLLocationUpdater = []
CoreLocation_CLMonitor = [
    "objc2-foundation/Foundation_NSArray",
    "objc2-foundation/Foundation_NSString",
]
CoreLocation_CLMonitorConfiguration = ["objc2-foundation/Foundation_NSString"]
CoreLocation_CLMonitoringEvent = [
    "objc2-foundation/Foundation_NSDate",
    "objc2-foundation/Foundation_NSObject",
    "objc2-foundation/Foundation_NSString",
]
CoreLocation_CLMonitoringRecord = ["objc2-foundation/Foundation_NSObject"]
CoreLocation_CLPlacemark = [
    "objc2-contacts?/Contacts_CNPostalAddress",
    "objc2-foundation/Foundation_NSArray",
    "objc2-foundation/Foundation_NSDictionary",
    "objc2-foundation/Foundation_NSObject",
    "objc2-foundation/Foundation_NSString",
    "objc2-foundation/Foundation_NSTimeZone",
]
CoreLocation_CLRegion = [
    "objc2-foundation/Foundation_NSObject",
    "objc2-foundation/Foundation_NSString",
]
CoreLocation_CLVisit = [
    "objc2-foundation/Foundation_NSDate",
    "objc2-foundation/Foundation_NSObject",
]
all = [
    "CoreLocation_CLAvailability",
    "CoreLocation_CLBackgroundActivitySession",
    "CoreLocation_CLBeaconIdentityCondition",
    "CoreLocation_CLBeaconIdentityConstraint",
    "CoreLocation_CLBeaconRegion",
    "CoreLocation_CLCircularGeographicCondition",
    "CoreLocation_CLCircularRegion",
    "CoreLocation_CLCondition",
    "CoreLocation_CLError",
    "CoreLocation_CLErrorDomain",
    "CoreLocation_CLGeocoder",
    "CoreLocation_CLHeading",
    "CoreLocation_CLLocation",
    "CoreLocation_CLLocationManager",
    "CoreLocation_CLLocationManagerDelegate",
    "CoreLocation_CLLocationManager_CLVisitExtensions",
    "CoreLocation_CLLocationPushServiceError",
    "CoreLocation_CLLocationPushServiceExtension",
    "CoreLocation_CLLocationUpdater",
    "CoreLocation_CLMonitor",
    "CoreLocation_CLMonitorConfiguration",
    "CoreLocation_CLMonitoringEvent",
    "CoreLocation_CLMonitoringRecord",
    "CoreLocation_CLPlacemark",
    "CoreLocation_CLRegion",
    "CoreLocation_CLVisit",
    "block2",
    "objc2-contacts",
]
