# This file has been automatically generated by `objc2`'s `header-translator`.
# DO NOT EDIT

[package]
name = "objc2-map-kit"
version = "0.2.0" # Remember to update html_root_url in lib.rs
description = "Bindings to the MapKit framework"
edition = "2021"
rust-version = "1.60"
keywords = ["cocoa", "apple", "framework", "macos", "ios"]
categories = [
    "api-bindings",
    "development-tools::ffi",
    "external-ffi-bindings",
    "os::macos-apis",
]
repository = "https://github.com/madsmtm/objc2"
license = "MIT"

[lints]
workspace = true

[dependencies]
objc2 = { path = "../../crates/objc2", version = "0.5.0", default-features = false, features = ["apple"] }
block2 = { path = "../../crates/block2", version = "0.4.0", optional = true }
objc2-app-kit = { path = "../objc2-app-kit", version = "0.2.0", optional = true }
objc2-contacts = { path = "../objc2-contacts", version = "0.2.0", optional = true }
objc2-core-location = { path = "../objc2-core-location", version = "0.2.0", optional = true }
objc2-foundation = { path = "../objc2-foundation", version = "0.2.0" }

[package.metadata.docs.rs]
default-target = "aarch64-apple-darwin"
features = ["all", "unstable-docsrs"]
targets = [
    "aarch64-apple-darwin",
    "x86_64-apple-darwin",
    "aarch64-apple-ios",
    "aarch64-apple-tvos",
    "aarch64-apple-watchos",
    "aarch64-apple-ios-macabi",
]

[features]
default = ["std"]

# Currently not possible to turn off, put here for forwards compatibility.
std = ["alloc", "objc2/std"]
alloc = ["objc2/alloc"]

# For better documentation on docs.rs
unstable-docsrs = []
block2 = ["dep:block2"]
objc2-app-kit = ["dep:objc2-app-kit"]
objc2-contacts = ["dep:objc2-contacts"]
objc2-core-location = ["dep:objc2-core-location"]

MapKit_MKAnnotation = [
    "objc2-core-location?/CoreLocation_CLLocation",
    "objc2-foundation/Foundation_NSString",
]
MapKit_MKAnnotationView = [
    "objc2-app-kit?/AppKit_NSAccessibilityProtocols",
    "objc2-app-kit?/AppKit_NSAnimation",
    "objc2-app-kit?/AppKit_NSAppearance",
    "objc2-app-kit?/AppKit_NSDragging",
    "objc2-app-kit?/AppKit_NSImage",
    "objc2-app-kit?/AppKit_NSResponder",
    "objc2-app-kit?/AppKit_NSUserInterfaceItemIdentification",
    "objc2-app-kit?/AppKit_NSView",
    "objc2-foundation/Foundation_NSCoder",
    "objc2-foundation/Foundation_NSGeometry",
    "objc2-foundation/Foundation_NSObject",
    "objc2-foundation/Foundation_NSString",
]
MapKit_MKCircle = ["objc2-core-location?/CoreLocation_CLLocation"]
MapKit_MKCircleRenderer = ["objc2-foundation/Foundation_NSGeometry"]
MapKit_MKClusterAnnotation = [
    "objc2-foundation/Foundation_NSArray",
    "objc2-foundation/Foundation_NSString",
]
MapKit_MKCompassButton = [
    "objc2-app-kit?/AppKit_NSAccessibilityProtocols",
    "objc2-app-kit?/AppKit_NSAnimation",
    "objc2-app-kit?/AppKit_NSAppearance",
    "objc2-app-kit?/AppKit_NSDragging",
    "objc2-app-kit?/AppKit_NSResponder",
    "objc2-app-kit?/AppKit_NSUserInterfaceItemIdentification",
    "objc2-app-kit?/AppKit_NSView",
    "objc2-foundation/Foundation_NSCoder",
    "objc2-foundation/Foundation_NSGeometry",
    "objc2-foundation/Foundation_NSObject",
]
MapKit_MKDirections = ["objc2-foundation/Foundation_NSError"]
MapKit_MKDirectionsRequest = [
    "objc2-foundation/Foundation_NSDate",
    "objc2-foundation/Foundation_NSURL",
]
MapKit_MKDirectionsResponse = [
    "objc2-core-location?/CoreLocation_CLLocation",
    "objc2-foundation/Foundation_NSArray",
    "objc2-foundation/Foundation_NSDate",
    "objc2-foundation/Foundation_NSString",
]
MapKit_MKDirectionsTypes = []
MapKit_MKDistanceFormatter = [
    "objc2-core-location?/CoreLocation_CLLocation",
    "objc2-foundation/Foundation_NSFormatter",
    "objc2-foundation/Foundation_NSLocale",
    "objc2-foundation/Foundation_NSObject",
    "objc2-foundation/Foundation_NSString",
]
MapKit_MKFoundation = []
MapKit_MKGeoJSONSerialization = [
    "objc2-foundation/Foundation_NSArray",
    "objc2-foundation/Foundation_NSData",
    "objc2-foundation/Foundation_NSError",
    "objc2-foundation/Foundation_NSString",
]
MapKit_MKGeodesicPolyline = ["objc2-core-location?/CoreLocation_CLLocation"]
MapKit_MKGeometry = [
    "objc2-core-location?/CoreLocation_CLLocation",
    "objc2-foundation/Foundation_NSGeometry",
    "objc2-foundation/Foundation_NSValue",
]
MapKit_MKGradientPolylineRenderer = [
    "objc2-app-kit?/AppKit_NSColor",
    "objc2-foundation/Foundation_NSArray",
    "objc2-foundation/Foundation_NSValue",
]
MapKit_MKHybridMapConfiguration = ["objc2-foundation/Foundation_NSObject"]
MapKit_MKImageryMapConfiguration = ["objc2-foundation/Foundation_NSObject"]
MapKit_MKLocalPointsOfInterestRequest = [
    "objc2-core-location?/CoreLocation_CLLocation",
    "objc2-foundation/Foundation_NSObject",
]
MapKit_MKLocalSearch = ["objc2-foundation/Foundation_NSError"]
MapKit_MKLocalSearchCompleter = [
    "objc2-core-location?/CoreLocation_CLLocation",
    "objc2-foundation/Foundation_NSArray",
    "objc2-foundation/Foundation_NSError",
    "objc2-foundation/Foundation_NSString",
    "objc2-foundation/Foundation_NSValue",
]
MapKit_MKLocalSearchRequest = [
    "objc2-core-location?/CoreLocation_CLLocation",
    "objc2-foundation/Foundation_NSObject",
    "objc2-foundation/Foundation_NSString",
]
MapKit_MKLocalSearchResponse = [
    "objc2-core-location?/CoreLocation_CLLocation",
    "objc2-foundation/Foundation_NSArray",
]
MapKit_MKLookAroundScene = ["objc2-foundation/Foundation_NSObject"]
MapKit_MKLookAroundSceneRequest = [
    "objc2-core-location?/CoreLocation_CLLocation",
    "objc2-foundation/Foundation_NSError",
]
MapKit_MKLookAroundSnapshot = ["objc2-app-kit?/AppKit_NSImage"]
MapKit_MKLookAroundSnapshotOptions = ["objc2-foundation/Foundation_NSGeometry"]
MapKit_MKLookAroundSnapshotter = ["objc2-foundation/Foundation_NSError"]
MapKit_MKLookAroundViewController = [
    "objc2-app-kit?/AppKit_NSKeyValueBinding",
    "objc2-app-kit?/AppKit_NSResponder",
    "objc2-app-kit?/AppKit_NSStoryboardSegue",
    "objc2-app-kit?/AppKit_NSUserInterfaceItemIdentification",
    "objc2-app-kit?/AppKit_NSViewController",
    "objc2-foundation/Foundation_NSBundle",
    "objc2-foundation/Foundation_NSCoder",
    "objc2-foundation/Foundation_NSObject",
    "objc2-foundation/Foundation_NSString",
]
MapKit_MKMapCamera = [
    "objc2-core-location?/CoreLocation_CLLocation",
    "objc2-foundation/Foundation_NSGeometry",
    "objc2-foundation/Foundation_NSObject",
]
MapKit_MKMapCameraBoundary = [
    "objc2-core-location?/CoreLocation_CLLocation",
    "objc2-foundation/Foundation_NSCoder",
    "objc2-foundation/Foundation_NSObject",
]
MapKit_MKMapCameraZoomRange = [
    "objc2-core-location?/CoreLocation_CLLocation",
    "objc2-foundation/Foundation_NSObject",
]
MapKit_MKMapConfiguration = ["objc2-foundation/Foundation_NSObject"]
MapKit_MKMapItem = [
    "objc2-core-location?/CoreLocation_CLPlacemark",
    "objc2-foundation/Foundation_NSArray",
    "objc2-foundation/Foundation_NSDictionary",
    "objc2-foundation/Foundation_NSObject",
    "objc2-foundation/Foundation_NSString",
    "objc2-foundation/Foundation_NSTimeZone",
    "objc2-foundation/Foundation_NSURL",
]
MapKit_MKMapSnapshot = [
    "objc2-app-kit?/AppKit_NSAppearance",
    "objc2-app-kit?/AppKit_NSImage",
    "objc2-core-location?/CoreLocation_CLLocation",
    "objc2-foundation/Foundation_NSGeometry",
]
MapKit_MKMapSnapshotOptions = [
    "objc2-app-kit?/AppKit_NSAppearance",
    "objc2-core-location?/CoreLocation_CLLocation",
    "objc2-foundation/Foundation_NSGeometry",
    "objc2-foundation/Foundation_NSObject",
]
MapKit_MKMapSnapshotter = ["objc2-foundation/Foundation_NSError"]
MapKit_MKMapView = [
    "objc2-app-kit?/AppKit_NSAccessibilityProtocols",
    "objc2-app-kit?/AppKit_NSAnimation",
    "objc2-app-kit?/AppKit_NSAppearance",
    "objc2-app-kit?/AppKit_NSDragging",
    "objc2-app-kit?/AppKit_NSResponder",
    "objc2-app-kit?/AppKit_NSUserInterfaceItemIdentification",
    "objc2-app-kit?/AppKit_NSView",
    "objc2-core-location?/CoreLocation_CLLocation",
    "objc2-foundation/Foundation_NSArray",
    "objc2-foundation/Foundation_NSCoder",
    "objc2-foundation/Foundation_NSError",
    "objc2-foundation/Foundation_NSGeometry",
    "objc2-foundation/Foundation_NSObject",
    "objc2-foundation/Foundation_NSSet",
    "objc2-foundation/Foundation_NSString",
]
MapKit_MKMarkerAnnotationView = [
    "objc2-app-kit?/AppKit_NSAccessibilityProtocols",
    "objc2-app-kit?/AppKit_NSAnimation",
    "objc2-app-kit?/AppKit_NSAppearance",
    "objc2-app-kit?/AppKit_NSColor",
    "objc2-app-kit?/AppKit_NSDragging",
    "objc2-app-kit?/AppKit_NSImage",
    "objc2-app-kit?/AppKit_NSResponder",
    "objc2-app-kit?/AppKit_NSUserInterfaceItemIdentification",
    "objc2-app-kit?/AppKit_NSView",
    "objc2-foundation/Foundation_NSCoder",
    "objc2-foundation/Foundation_NSGeometry",
    "objc2-foundation/Foundation_NSObject",
    "objc2-foundation/Foundation_NSString",
]
MapKit_MKMultiPoint = [
    "objc2-core-location?/CoreLocation_CLLocation",
    "objc2-foundation/Foundation_NSArray",
    "objc2-foundation/Foundation_NSGeometry",
    "objc2-foundation/Foundation_NSIndexSet",
    "objc2-foundation/Foundation_NSRange",
    "objc2-foundation/Foundation_NSValue",
]
MapKit_MKMultiPolygon = ["objc2-foundation/Foundation_NSArray"]
MapKit_MKMultiPolygonRenderer = []
MapKit_MKMultiPolyline = ["objc2-foundation/Foundation_NSArray"]
MapKit_MKMultiPolylineRenderer = []
MapKit_MKOverlay = ["objc2-core-location?/CoreLocation_CLLocation"]
MapKit_MKOverlayPathRenderer = [
    "objc2-app-kit?/AppKit_NSColor",
    "objc2-foundation/Foundation_NSArray",
    "objc2-foundation/Foundation_NSGeometry",
    "objc2-foundation/Foundation_NSValue",
]
MapKit_MKOverlayRenderer = ["objc2-foundation/Foundation_NSGeometry"]
MapKit_MKPinAnnotationView = [
    "objc2-app-kit?/AppKit_NSAccessibilityProtocols",
    "objc2-app-kit?/AppKit_NSAnimation",
    "objc2-app-kit?/AppKit_NSAppearance",
    "objc2-app-kit?/AppKit_NSColor",
    "objc2-app-kit?/AppKit_NSDragging",
    "objc2-app-kit?/AppKit_NSResponder",
    "objc2-app-kit?/AppKit_NSUserInterfaceItemIdentification",
    "objc2-app-kit?/AppKit_NSView",
    "objc2-foundation/Foundation_NSCoder",
    "objc2-foundation/Foundation_NSGeometry",
    "objc2-foundation/Foundation_NSObject",
    "objc2-foundation/Foundation_NSString",
]
MapKit_MKPitchControl = [
    "objc2-app-kit?/AppKit_NSAccessibilityProtocols",
    "objc2-app-kit?/AppKit_NSAnimation",
    "objc2-app-kit?/AppKit_NSAppearance",
    "objc2-app-kit?/AppKit_NSDragging",
    "objc2-app-kit?/AppKit_NSResponder",
    "objc2-app-kit?/AppKit_NSUserInterfaceItemIdentification",
    "objc2-app-kit?/AppKit_NSView",
    "objc2-foundation/Foundation_NSCoder",
    "objc2-foundation/Foundation_NSGeometry",
    "objc2-foundation/Foundation_NSObject",
]
MapKit_MKPlacemark = [
    "objc2-contacts?/Contacts_CNPostalAddress",
    "objc2-core-location?/CoreLocation_CLLocation",
    "objc2-core-location?/CoreLocation_CLPlacemark",
    "objc2-foundation/Foundation_NSDictionary",
    "objc2-foundation/Foundation_NSObject",
    "objc2-foundation/Foundation_NSString",
]
MapKit_MKPointAnnotation = [
    "objc2-core-location?/CoreLocation_CLLocation",
    "objc2-foundation/Foundation_NSString",
]
MapKit_MKPointOfInterestCategory = ["objc2-foundation/Foundation_NSString"]
MapKit_MKPointOfInterestFilter = [
    "objc2-foundation/Foundation_NSArray",
    "objc2-foundation/Foundation_NSObject",
    "objc2-foundation/Foundation_NSString",
]
MapKit_MKPolygon = [
    "objc2-core-location?/CoreLocation_CLLocation",
    "objc2-foundation/Foundation_NSArray",
]
MapKit_MKPolygonRenderer = ["objc2-foundation/Foundation_NSGeometry"]
MapKit_MKPolyline = ["objc2-core-location?/CoreLocation_CLLocation"]
MapKit_MKPolylineRenderer = ["objc2-foundation/Foundation_NSGeometry"]
MapKit_MKShape = ["objc2-foundation/Foundation_NSString"]
MapKit_MKStandardMapConfiguration = ["objc2-foundation/Foundation_NSObject"]
MapKit_MKTileOverlay = [
    "objc2-foundation/Foundation_NSData",
    "objc2-foundation/Foundation_NSError",
    "objc2-foundation/Foundation_NSGeometry",
    "objc2-foundation/Foundation_NSString",
    "objc2-foundation/Foundation_NSURL",
]
MapKit_MKTileOverlayRenderer = []
MapKit_MKTypes = ["objc2-foundation/Foundation_NSString"]
MapKit_MKUserLocation = [
    "objc2-core-location?/CoreLocation_CLHeading",
    "objc2-core-location?/CoreLocation_CLLocation",
    "objc2-foundation/Foundation_NSString",
]
MapKit_MKUserLocationView = [
    "objc2-app-kit?/AppKit_NSAccessibilityProtocols",
    "objc2-app-kit?/AppKit_NSAnimation",
    "objc2-app-kit?/AppKit_NSAppearance",
    "objc2-app-kit?/AppKit_NSDragging",
    "objc2-app-kit?/AppKit_NSResponder",
    "objc2-app-kit?/AppKit_NSUserInterfaceItemIdentification",
    "objc2-app-kit?/AppKit_NSView",
    "objc2-foundation/Foundation_NSCoder",
    "objc2-foundation/Foundation_NSGeometry",
    "objc2-foundation/Foundation_NSObject",
    "objc2-foundation/Foundation_NSString",
]
MapKit_MKZoomControl = [
    "objc2-app-kit?/AppKit_NSAccessibilityProtocols",
    "objc2-app-kit?/AppKit_NSAnimation",
    "objc2-app-kit?/AppKit_NSAppearance",
    "objc2-app-kit?/AppKit_NSDragging",
    "objc2-app-kit?/AppKit_NSResponder",
    "objc2-app-kit?/AppKit_NSUserInterfaceItemIdentification",
    "objc2-app-kit?/AppKit_NSView",
    "objc2-foundation/Foundation_NSCoder",
    "objc2-foundation/Foundation_NSGeometry",
    "objc2-foundation/Foundation_NSObject",
]
MapKit_NSUserActivity_MKMapItem = ["objc2-foundation/Foundation_NSUserActivity"]
all = [
    "MapKit_MKAnnotation",
    "MapKit_MKAnnotationView",
    "MapKit_MKCircle",
    "MapKit_MKCircleRenderer",
    "MapKit_MKClusterAnnotation",
    "MapKit_MKCompassButton",
    "MapKit_MKDirections",
    "MapKit_MKDirectionsRequest",
    "MapKit_MKDirectionsResponse",
    "MapKit_MKDirectionsTypes",
    "MapKit_MKDistanceFormatter",
    "MapKit_MKFoundation",
    "MapKit_MKGeoJSONSerialization",
    "MapKit_MKGeodesicPolyline",
    "MapKit_MKGeometry",
    "MapKit_MKGradientPolylineRenderer",
    "MapKit_MKHybridMapConfiguration",
    "MapKit_MKImageryMapConfiguration",
    "MapKit_MKLocalPointsOfInterestRequest",
    "MapKit_MKLocalSearch",
    "MapKit_MKLocalSearchCompleter",
    "MapKit_MKLocalSearchRequest",
    "MapKit_MKLocalSearchResponse",
    "MapKit_MKLookAroundScene",
    "MapKit_MKLookAroundSceneRequest",
    "MapKit_MKLookAroundSnapshot",
    "MapKit_MKLookAroundSnapshotOptions",
    "MapKit_MKLookAroundSnapshotter",
    "MapKit_MKLookAroundViewController",
    "MapKit_MKMapCamera",
    "MapKit_MKMapCameraBoundary",
    "MapKit_MKMapCameraZoomRange",
    "MapKit_MKMapConfiguration",
    "MapKit_MKMapItem",
    "MapKit_MKMapSnapshot",
    "MapKit_MKMapSnapshotOptions",
    "MapKit_MKMapSnapshotter",
    "MapKit_MKMapView",
    "MapKit_MKMarkerAnnotationView",
    "MapKit_MKMultiPoint",
    "MapKit_MKMultiPolygon",
    "MapKit_MKMultiPolygonRenderer",
    "MapKit_MKMultiPolyline",
    "MapKit_MKMultiPolylineRenderer",
    "MapKit_MKOverlay",
    "MapKit_MKOverlayPathRenderer",
    "MapKit_MKOverlayRenderer",
    "MapKit_MKPinAnnotationView",
    "MapKit_MKPitchControl",
    "MapKit_MKPlacemark",
    "MapKit_MKPointAnnotation",
    "MapKit_MKPointOfInterestCategory",
    "MapKit_MKPointOfInterestFilter",
    "MapKit_MKPolygon",
    "MapKit_MKPolygonRenderer",
    "MapKit_MKPolyline",
    "MapKit_MKPolylineRenderer",
    "MapKit_MKShape",
    "MapKit_MKStandardMapConfiguration",
    "MapKit_MKTileOverlay",
    "MapKit_MKTileOverlayRenderer",
    "MapKit_MKTypes",
    "MapKit_MKUserLocation",
    "MapKit_MKUserLocationView",
    "MapKit_MKZoomControl",
    "MapKit_NSUserActivity_MKMapItem",
    "block2",
    "objc2-app-kit",
    "objc2-contacts",
    "objc2-core-location",
]
