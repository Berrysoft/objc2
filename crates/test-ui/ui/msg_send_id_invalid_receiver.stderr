error[E0308]: mismatched types
 --> ui/msg_send_id_invalid_receiver.rs
  |
  |     let _: Allocated<NSObject> = unsafe { msg_send_id![obj, alloc] };
  |                                           -------------^^^--------
  |                                           |            |
  |                                           |            expected `&AnyClass`, found `&NSObject`
  |                                           arguments to this function are incorrect
  |
  = note: expected reference `&AnyClass`
             found reference `&NSObject`
note: associated function defined here
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/msg_send_id.rs
  |
  |     pub unsafe fn send_message_id_alloc<T: Message, R: MaybeUnwrap<Input = Allocated<T>>>(
  |                   ^^^^^^^^^^^^^^^^^^^^^

error[E0308]: mismatched types
 --> ui/msg_send_id_invalid_receiver.rs
  |
  |     let _: Id<NSObject> = unsafe { msg_send_id![obj, init] };
  |                                    -------------^^^-------
  |                                    |            |
  |                                    |            expected `Allocated<_>`, found `&NSObject`
  |                                    arguments to this function are incorrect
  |
  = note: expected struct `Allocated<_>`
          found reference `&NSObject`
note: associated function defined here
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/msg_send_id.rs
  |
  |     unsafe fn send_message_id<A: ConvertArguments, R: MaybeUnwrap<Input = U>>(
  |               ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
 --> ui/msg_send_id_invalid_receiver.rs
  |
  |     let _: Id<NSObject> = unsafe { msg_send_id![cls, init] };
  |                                    -------------^^^-------
  |                                    |            |
  |                                    |            expected `Allocated<_>`, found `&AnyClass`
  |                                    arguments to this function are incorrect
  |
  = note: expected struct `Allocated<_>`
          found reference `&AnyClass`
note: associated function defined here
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/msg_send_id.rs
  |
  |     unsafe fn send_message_id<A: ConvertArguments, R: MaybeUnwrap<Input = U>>(
  |               ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
 --> ui/msg_send_id_invalid_receiver.rs
  |
  |     let _: Id<NSObject> = unsafe { msg_send_id![obj, init] };
  |                                    -------------^^^-------
  |                                    |            |
  |                                    |            expected `Allocated<_>`, found `Id<NSObject>`
  |                                    arguments to this function are incorrect
  |
  = note: expected struct `Allocated<_>`
             found struct `Id<NSObject>`
note: associated function defined here
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/msg_send_id.rs
  |
  |     unsafe fn send_message_id<A: ConvertArguments, R: MaybeUnwrap<Input = U>>(
  |               ^^^^^^^^^^^^^^^

error[E0308]: mismatched types
 --> ui/msg_send_id_invalid_receiver.rs
  |
  |     let _: Id<NSObject> = unsafe { msg_send_id![obj, init] };
  |                                    -------------^^^-------
  |                                    |            |
  |                                    |            expected `Allocated<_>`, found `Option<Id<NSObject>>`
  |                                    arguments to this function are incorrect
  |
  = note: expected struct `Allocated<_>`
               found enum `Option<Id<NSObject>>`
note: associated function defined here
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/msg_send_id.rs
  |
  |     unsafe fn send_message_id<A: ConvertArguments, R: MaybeUnwrap<Input = U>>(
  |               ^^^^^^^^^^^^^^^

error[E0277]: the trait bound `Id<NSObject>: MessageReceiver` is not satisfied
 --> ui/msg_send_id_invalid_receiver.rs
  |
  |     let _: Id<NSObject> = unsafe { msg_send_id![obj, new] };
  |                                    ^^^^^^^^^^^^^^^^^^^^^^ the trait `MessageReceiver` is not implemented for `Id<NSObject>`
  |
  = help: the following other types implement trait `MessageReceiver`:
            NonNull<T>
            *const AnyClass
            *const T
            *mut T
            &'a T
            &'a mut T
            &'a AnyClass
  = note: required for `Id<NSObject>` to implement `MsgSend`
  = note: required for `RetainSemantics<1>` to implement `MsgSendId<Id<NSObject>, Option<Id<_>>>`
  = note: this error originates in the macro `msg_send_id` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Id<NSObject>: MessageReceiver` is not satisfied
 --> ui/msg_send_id_invalid_receiver.rs
  |
  |     let _: Id<NSObject> = unsafe { msg_send_id![obj, copy] };
  |                                    ^^^^^^^^^^^^^^^^^^^^^^^ the trait `MessageReceiver` is not implemented for `Id<NSObject>`
  |
  = help: the following other types implement trait `MessageReceiver`:
            NonNull<T>
            *const AnyClass
            *const T
            *mut T
            &'a T
            &'a mut T
            &'a AnyClass
  = note: required for `Id<NSObject>` to implement `MsgSend`
  = note: required for `RetainSemantics<4>` to implement `MsgSendId<Id<NSObject>, Option<Id<_>>>`
  = note: this error originates in the macro `$crate::__msg_send_id_helper` which comes from the expansion of the macro `msg_send_id` (in Nightly builds, run with -Z macro-backtrace for more info)
