error[E0277]: the trait bound `&AnyObject: MaybeUnwrap` is not satisfied
 --> ui/msg_send_id_invalid_return.rs
  |
  |     let _: &AnyObject = unsafe { msg_send_id![cls, new] };
  |                                  ^^^^^^^^^^^^^^^^^^^^^^ the trait `MaybeUnwrap` is not implemented for `&AnyObject`
  |
  = help: the following other types implement trait `MaybeUnwrap`:
            Id<T>
            Allocated<T>
            Option<Id<T>>
            Option<Allocated<T>>
note: required by a bound in `send_message_id`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/msg_send_id.rs
  |
  |     unsafe fn send_message_id<A: MessageArguments, R: MaybeUnwrap<Input = U>>(
  |                                                       ^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `MsgSendId::send_message_id`
  = note: this error originates in the macro `msg_send_id` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `AnyClass: Message` is not satisfied
 --> ui/msg_send_id_invalid_return.rs
  |
  |     let _: Id<AnyClass> = unsafe { msg_send_id![cls, new] };
  |                                    -------------^^^------
  |                                    |            |
  |                                    |            the trait `Message` is not implemented for `AnyClass`
  |                                    required by a bound introduced by this call
  |
  = help: the following other types implement trait `Message`:
            Exception
            ProtocolObject<P>
            AnyObject
            __RcTestObject
            NSObject
            __NSProxy
  = note: required for `RetainSemantics<1>` to implement `MsgSendId<&AnyClass, Id<AnyClass>>`

error[E0277]: the trait bound `AnyClass: Message` is not satisfied
 --> ui/msg_send_id_invalid_return.rs
  |
  |     let _: Option<Id<AnyClass>> = unsafe { msg_send_id![cls, new] };
  |                                            -------------^^^------
  |                                            |            |
  |                                            |            the trait `Message` is not implemented for `AnyClass`
  |                                            required by a bound introduced by this call
  |
  = help: the following other types implement trait `Message`:
            Exception
            ProtocolObject<P>
            AnyObject
            __RcTestObject
            NSObject
            __NSProxy
  = note: required for `RetainSemantics<1>` to implement `MsgSendId<&AnyClass, Id<AnyClass>>`

error[E0277]: the trait bound `&AnyObject: MaybeUnwrap` is not satisfied
 --> ui/msg_send_id_invalid_return.rs
  |
  |     let _: &AnyObject = unsafe { msg_send_id![cls, alloc] };
  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^ the trait `MaybeUnwrap` is not implemented for `&AnyObject`
  |
  = help: the following other types implement trait `MaybeUnwrap`:
            Id<T>
            Allocated<T>
            Option<Id<T>>
            Option<Allocated<T>>
note: required by a bound in `send_message_id`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/msg_send_id.rs
  |
  |     unsafe fn send_message_id<A: MessageArguments, R: MaybeUnwrap<Input = U>>(
  |                                                       ^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `MsgSendId::send_message_id`
  = note: this error originates in the macro `msg_send_id` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `AnyClass: Message` is not satisfied
 --> ui/msg_send_id_invalid_return.rs
  |
  |     let _: Allocated<AnyClass> = unsafe { msg_send_id![cls, alloc] };
  |                                           -------------^^^--------
  |                                           |            |
  |                                           |            the trait `Message` is not implemented for `AnyClass`
  |                                           required by a bound introduced by this call
  |
  = help: the following other types implement trait `Message`:
            Exception
            ProtocolObject<P>
            AnyObject
            __RcTestObject
            NSObject
            __NSProxy
  = note: required for `RetainSemantics<2>` to implement `MsgSendId<&AnyClass, Allocated<AnyClass>>`

error[E0271]: type mismatch resolving `<Id<AnyObject> as MaybeUnwrap>::Input == Allocated<_>`
 --> ui/msg_send_id_invalid_return.rs
  |
  |     let _: Id<AnyObject> = unsafe { msg_send_id![cls, alloc] };
  |                                     ^^^^^^^^^^^^^^^^^^^^^^^^ expected `Allocated<_>`, found `Id<AnyObject>`
  |
  = note: expected struct `Allocated<_>`
             found struct `Id<AnyObject>`
note: required by a bound in `send_message_id`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/msg_send_id.rs
  |
  |     unsafe fn send_message_id<A: MessageArguments, R: MaybeUnwrap<Input = U>>(
  |                                                                   ^^^^^^^^^ required by this bound in `MsgSendId::send_message_id`
  = note: this error originates in the macro `msg_send_id` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0271]: type mismatch resolving `<Id<Allocated<AnyObject>> as MaybeUnwrap>::Input == Allocated<_>`
 --> ui/msg_send_id_invalid_return.rs
  |
  |     let _: Id<Allocated<AnyObject>> = unsafe { msg_send_id![cls, alloc] };
  |                                                ^^^^^^^^^^^^^^^^^^^^^^^^ expected `Allocated<_>`, found `Id<Allocated<AnyObject>>`
  |
  = note: expected struct `Allocated<_>`
             found struct `Id<Allocated<AnyObject>>`
note: required by a bound in `send_message_id`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/msg_send_id.rs
  |
  |     unsafe fn send_message_id<A: MessageArguments, R: MaybeUnwrap<Input = U>>(
  |                                                                   ^^^^^^^^^ required by this bound in `MsgSendId::send_message_id`
  = note: this error originates in the macro `msg_send_id` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `&AnyObject: MaybeUnwrap` is not satisfied
 --> ui/msg_send_id_invalid_return.rs
  |
  |     let _: &AnyObject = unsafe { msg_send_id![obj, init] };
  |                                  ^^^^^^^^^^^^^^^^^^^^^^^ the trait `MaybeUnwrap` is not implemented for `&AnyObject`
  |
  = help: the following other types implement trait `MaybeUnwrap`:
            Id<T>
            Allocated<T>
            Option<Id<T>>
            Option<Allocated<T>>
note: required by a bound in `send_message_id`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/msg_send_id.rs
  |
  |     unsafe fn send_message_id<A: MessageArguments, R: MaybeUnwrap<Input = U>>(
  |                                                       ^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `MsgSendId::send_message_id`
  = note: this error originates in the macro `msg_send_id` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0271]: type mismatch resolving `<Id<AnyClass> as MaybeUnwrap>::Input == Id<AnyObject>`
 --> ui/msg_send_id_invalid_return.rs
  |
  |     let _: Id<AnyClass> = unsafe { msg_send_id![obj, init] };
  |                                    ^^^^^^^^^^^^^^^^^^^^^^^ expected `Id<AnyObject>`, found `Id<AnyClass>`
  |
  = note: expected struct `Id<AnyObject>`
             found struct `Id<AnyClass>`
note: required by a bound in `send_message_id`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/msg_send_id.rs
  |
  |     unsafe fn send_message_id<A: MessageArguments, R: MaybeUnwrap<Input = U>>(
  |                                                                   ^^^^^^^^^ required by this bound in `MsgSendId::send_message_id`
  = note: this error originates in the macro `msg_send_id` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0271]: type mismatch resolving `<Id<NSObject> as MaybeUnwrap>::Input == Id<AnyObject>`
 --> ui/msg_send_id_invalid_return.rs
  |
  |     let _: Id<NSObject> = unsafe { msg_send_id![obj, init] };
  |                                    ^^^^^^^^^^^^^^^^^^^^^^^ expected `Id<AnyObject>`, found `Id<NSObject>`
  |
  = note: expected struct `Id<AnyObject>`
             found struct `Id<NSObject>`
note: required by a bound in `send_message_id`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/msg_send_id.rs
  |
  |     unsafe fn send_message_id<A: MessageArguments, R: MaybeUnwrap<Input = U>>(
  |                                                                   ^^^^^^^^^ required by this bound in `MsgSendId::send_message_id`
  = note: this error originates in the macro `msg_send_id` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `&AnyObject: MaybeUnwrap` is not satisfied
 --> ui/msg_send_id_invalid_return.rs
  |
  |     let _: &AnyObject = unsafe { msg_send_id![obj, copy] };
  |                                  ^^^^^^^^^^^^^^^^^^^^^^^ the trait `MaybeUnwrap` is not implemented for `&AnyObject`
  |
  = help: the following other types implement trait `MaybeUnwrap`:
            Id<T>
            Allocated<T>
            Option<Id<T>>
            Option<Allocated<T>>
note: required by a bound in `send_message_id`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/msg_send_id.rs
  |
  |     unsafe fn send_message_id<A: MessageArguments, R: MaybeUnwrap<Input = U>>(
  |                                                       ^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `MsgSendId::send_message_id`
  = note: this error originates in the macro `$crate::__msg_send_id_helper` which comes from the expansion of the macro `msg_send_id` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `&AnyObject: MaybeUnwrap` is not satisfied
 --> ui/msg_send_id_invalid_return.rs
  |
  |     let _: &AnyObject = unsafe { msg_send_id![obj, description] };
  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `MaybeUnwrap` is not implemented for `&AnyObject`
  |
  = help: the following other types implement trait `MaybeUnwrap`:
            Id<T>
            Allocated<T>
            Option<Id<T>>
            Option<Allocated<T>>
note: required by a bound in `send_message_id`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/msg_send_id.rs
  |
  |     unsafe fn send_message_id<A: MessageArguments, R: MaybeUnwrap<Input = U>>(
  |                                                       ^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `MsgSendId::send_message_id`
  = note: this error originates in the macro `$crate::__msg_send_id_helper` which comes from the expansion of the macro `msg_send_id` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Option<&AnyObject>: MaybeUnwrap` is not satisfied
 --> ui/msg_send_id_invalid_return.rs
  |
  |     let _: Option<&AnyObject> = unsafe { msg_send_id![obj, description] };
  |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `MaybeUnwrap` is not implemented for `Option<&AnyObject>`
  |
  = help: the following other types implement trait `MaybeUnwrap`:
            Option<Id<T>>
            Option<Allocated<T>>
note: required by a bound in `send_message_id`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/msg_send_id.rs
  |
  |     unsafe fn send_message_id<A: MessageArguments, R: MaybeUnwrap<Input = U>>(
  |                                                       ^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `MsgSendId::send_message_id`
  = note: this error originates in the macro `$crate::__msg_send_id_helper` which comes from the expansion of the macro `msg_send_id` (in Nightly builds, run with -Z macro-backtrace for more info)
