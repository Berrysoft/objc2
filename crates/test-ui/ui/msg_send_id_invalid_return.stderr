error[E0277]: the trait bound `&AnyObject: MaybeUnwrap` is not satisfied
 --> ui/msg_send_id_invalid_return.rs
  |
  |     let _: &AnyObject = unsafe { msg_send_id![cls, new] };
  |                                  ^^^^^^^^^^^^^^^^^^^^^^ the trait `MaybeUnwrap` is not implemented for `&AnyObject`
  |
  = help: the following other types implement trait `MaybeUnwrap`:
            Allocated<T>
            Id<T>
            Option<Id<T>>
note: required by a bound in `send_message_id`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/msg_send_id.rs
  |
  |     unsafe fn send_message_id<A: ConvertArguments, R: MaybeUnwrap<Input = U>>(
  |                                                       ^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `MsgSendId::send_message_id`
  = note: this error originates in the macro `msg_send_id` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `AnyClass: Message` is not satisfied
 --> ui/msg_send_id_invalid_return.rs
  |
  |     let _: Id<AnyClass> = unsafe { msg_send_id![cls, new] };
  |                                    ^^^^^^^^^^^^^^^^^^^^^^ the trait `Message` is not implemented for `AnyClass`, which is required by `RetainSemantics<1>: MsgSendId<_, _>`
  |
  = help: the following other types implement trait `Message`:
            AnyObject
            Exception
            NSObject
            ProtocolObject<P>
            __NSProxy
            __RcTestObject
  = note: required for `RetainSemantics<1>` to implement `MsgSendId<&AnyClass, Option<Id<AnyClass>>>`
  = note: this error originates in the macro `msg_send_id` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `AnyClass: Message` is not satisfied
 --> ui/msg_send_id_invalid_return.rs
  |
  |     let _: Option<Id<AnyClass>> = unsafe { msg_send_id![cls, new] };
  |                                            ^^^^^^^^^^^^^^^^^^^^^^ the trait `Message` is not implemented for `AnyClass`, which is required by `RetainSemantics<1>: MsgSendId<_, _>`
  |
  = help: the following other types implement trait `Message`:
            AnyObject
            Exception
            NSObject
            ProtocolObject<P>
            __NSProxy
            __RcTestObject
  = note: required for `RetainSemantics<1>` to implement `MsgSendId<&AnyClass, Option<Id<AnyClass>>>`
  = note: this error originates in the macro `msg_send_id` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `&AnyObject: MaybeUnwrap` is not satisfied
 --> ui/msg_send_id_invalid_return.rs
  |
  |     let _: &AnyObject = unsafe { msg_send_id![cls, alloc] };
  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^ the trait `MaybeUnwrap` is not implemented for `&AnyObject`
  |
  = help: the following other types implement trait `MaybeUnwrap`:
            Allocated<T>
            Id<T>
            Option<Id<T>>
note: required by a bound in `__macro_helpers::msg_send_id::<impl RetainSemantics<2>>::send_message_id_alloc`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/msg_send_id.rs
  |
  |     pub unsafe fn send_message_id_alloc<T: Message, R: MaybeUnwrap<Input = Allocated<T>>>(
  |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `__macro_helpers::msg_send_id::<impl RetainSemantics<2>>::send_message_id_alloc`
  = note: this error originates in the macro `msg_send_id` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `AnyClass: Message` is not satisfied
 --> ui/msg_send_id_invalid_return.rs
  |
  |     let _: Allocated<AnyClass> = unsafe { msg_send_id![cls, alloc] };
  |                                           ^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Message` is not implemented for `AnyClass`
  |
  = help: the following other types implement trait `Message`:
            AnyObject
            Exception
            NSObject
            ProtocolObject<P>
            __NSProxy
            __RcTestObject
note: required by a bound in `__macro_helpers::msg_send_id::<impl RetainSemantics<2>>::send_message_id_alloc`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/msg_send_id.rs
  |
  |     pub unsafe fn send_message_id_alloc<T: Message, R: MaybeUnwrap<Input = Allocated<T>>>(
  |                                            ^^^^^^^ required by this bound in `__macro_helpers::msg_send_id::<impl RetainSemantics<2>>::send_message_id_alloc`
  = note: this error originates in the macro `msg_send_id` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0271]: type mismatch resolving `<Id<AnyObject> as MaybeUnwrap>::Input == Allocated<_>`
 --> ui/msg_send_id_invalid_return.rs
  |
  |     let _: Id<AnyObject> = unsafe { msg_send_id![cls, alloc] };
  |                                     ^^^^^^^^^^^^^^^^^^^^^^^^ expected `Allocated<_>`, found `Option<Id<AnyObject>>`
  |
  = note: expected struct `Allocated<_>`
               found enum `Option<Id<AnyObject>>`
note: required by a bound in `__macro_helpers::msg_send_id::<impl RetainSemantics<2>>::send_message_id_alloc`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/msg_send_id.rs
  |
  |     pub unsafe fn send_message_id_alloc<T: Message, R: MaybeUnwrap<Input = Allocated<T>>>(
  |                                                                    ^^^^^^^^^^^^^^^^^^^^ required by this bound in `__macro_helpers::msg_send_id::<impl RetainSemantics<2>>::send_message_id_alloc`
  = note: this error originates in the macro `msg_send_id` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Option<Allocated<AnyObject>>: MaybeUnwrap` is not satisfied
 --> ui/msg_send_id_invalid_return.rs
  |
  |     let _: Option<Allocated<AnyObject>> = unsafe { msg_send_id![cls, alloc] };
  |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^ the trait `MaybeUnwrap` is not implemented for `Option<Allocated<AnyObject>>`
  |
  = help: the trait `MaybeUnwrap` is implemented for `Option<Id<T>>`
note: required by a bound in `__macro_helpers::msg_send_id::<impl RetainSemantics<2>>::send_message_id_alloc`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/msg_send_id.rs
  |
  |     pub unsafe fn send_message_id_alloc<T: Message, R: MaybeUnwrap<Input = Allocated<T>>>(
  |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `__macro_helpers::msg_send_id::<impl RetainSemantics<2>>::send_message_id_alloc`
  = note: this error originates in the macro `msg_send_id` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0271]: type mismatch resolving `<Id<Allocated<AnyObject>> as MaybeUnwrap>::Input == Allocated<_>`
 --> ui/msg_send_id_invalid_return.rs
  |
  |     let _: Id<Allocated<AnyObject>> = unsafe { msg_send_id![cls, alloc] };
  |                                                ^^^^^^^^^^^^^^^^^^^^^^^^ expected `Allocated<_>`, found `Option<Id<Allocated<AnyObject>>>`
  |
  = note: expected struct `Allocated<_>`
               found enum `Option<Id<Allocated<AnyObject>>>`
note: required by a bound in `__macro_helpers::msg_send_id::<impl RetainSemantics<2>>::send_message_id_alloc`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/msg_send_id.rs
  |
  |     pub unsafe fn send_message_id_alloc<T: Message, R: MaybeUnwrap<Input = Allocated<T>>>(
  |                                                                    ^^^^^^^^^^^^^^^^^^^^ required by this bound in `__macro_helpers::msg_send_id::<impl RetainSemantics<2>>::send_message_id_alloc`
  = note: this error originates in the macro `msg_send_id` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `&AnyObject: MaybeUnwrap` is not satisfied
 --> ui/msg_send_id_invalid_return.rs
  |
  |     let _: &AnyObject = unsafe { msg_send_id![obj, init] };
  |                                  ^^^^^^^^^^^^^^^^^^^^^^^ the trait `MaybeUnwrap` is not implemented for `&AnyObject`
  |
  = help: the following other types implement trait `MaybeUnwrap`:
            Allocated<T>
            Id<T>
            Option<Id<T>>
note: required by a bound in `send_message_id`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/msg_send_id.rs
  |
  |     unsafe fn send_message_id<A: ConvertArguments, R: MaybeUnwrap<Input = U>>(
  |                                                       ^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `MsgSendId::send_message_id`
  = note: this error originates in the macro `msg_send_id` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0271]: type mismatch resolving `<Id<AnyClass> as MaybeUnwrap>::Input == Option<Id<AnyObject>>`
 --> ui/msg_send_id_invalid_return.rs
  |
  |     let _: Id<AnyClass> = unsafe { msg_send_id![obj, init] };
  |                                    ^^^^^^^^^^^^^^^^^^^^^^^ expected `Option<Id<AnyObject>>`, found `Option<Id<AnyClass>>`
  |
  = note: expected enum `Option<Id<AnyObject>>`
             found enum `Option<Id<AnyClass>>`
note: required by a bound in `send_message_id`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/msg_send_id.rs
  |
  |     unsafe fn send_message_id<A: ConvertArguments, R: MaybeUnwrap<Input = U>>(
  |                                                                   ^^^^^^^^^ required by this bound in `MsgSendId::send_message_id`
  = note: this error originates in the macro `msg_send_id` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0271]: type mismatch resolving `<Id<NSObject> as MaybeUnwrap>::Input == Option<Id<AnyObject>>`
 --> ui/msg_send_id_invalid_return.rs
  |
  |     let _: Id<NSObject> = unsafe { msg_send_id![obj, init] };
  |                                    ^^^^^^^^^^^^^^^^^^^^^^^ expected `Option<Id<AnyObject>>`, found `Option<Id<NSObject>>`
  |
  = note: expected enum `Option<Id<AnyObject>>`
             found enum `Option<Id<NSObject>>`
note: required by a bound in `send_message_id`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/msg_send_id.rs
  |
  |     unsafe fn send_message_id<A: ConvertArguments, R: MaybeUnwrap<Input = U>>(
  |                                                                   ^^^^^^^^^ required by this bound in `MsgSendId::send_message_id`
  = note: this error originates in the macro `msg_send_id` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `&AnyObject: MaybeUnwrap` is not satisfied
 --> ui/msg_send_id_invalid_return.rs
  |
  |     let _: &AnyObject = unsafe { msg_send_id![obj, copy] };
  |                                  ^^^^^^^^^^^^^^^^^^^^^^^ the trait `MaybeUnwrap` is not implemented for `&AnyObject`
  |
  = help: the following other types implement trait `MaybeUnwrap`:
            Allocated<T>
            Id<T>
            Option<Id<T>>
note: required by a bound in `send_message_id`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/msg_send_id.rs
  |
  |     unsafe fn send_message_id<A: ConvertArguments, R: MaybeUnwrap<Input = U>>(
  |                                                       ^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `MsgSendId::send_message_id`
  = note: this error originates in the macro `$crate::__msg_send_id_helper` which comes from the expansion of the macro `msg_send_id` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `&AnyObject: MaybeUnwrap` is not satisfied
 --> ui/msg_send_id_invalid_return.rs
  |
  |     let _: &AnyObject = unsafe { msg_send_id![obj, description] };
  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `MaybeUnwrap` is not implemented for `&AnyObject`
  |
  = help: the following other types implement trait `MaybeUnwrap`:
            Allocated<T>
            Id<T>
            Option<Id<T>>
note: required by a bound in `send_message_id`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/msg_send_id.rs
  |
  |     unsafe fn send_message_id<A: ConvertArguments, R: MaybeUnwrap<Input = U>>(
  |                                                       ^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `MsgSendId::send_message_id`
  = note: this error originates in the macro `$crate::__msg_send_id_helper` which comes from the expansion of the macro `msg_send_id` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Option<&AnyObject>: MaybeUnwrap` is not satisfied
 --> ui/msg_send_id_invalid_return.rs
  |
  |     let _: Option<&AnyObject> = unsafe { msg_send_id![obj, description] };
  |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `MaybeUnwrap` is not implemented for `Option<&AnyObject>`
  |
  = help: the trait `MaybeUnwrap` is implemented for `Option<Id<T>>`
note: required by a bound in `send_message_id`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/msg_send_id.rs
  |
  |     unsafe fn send_message_id<A: ConvertArguments, R: MaybeUnwrap<Input = U>>(
  |                                                       ^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `MsgSendId::send_message_id`
  = note: this error originates in the macro `$crate::__msg_send_id_helper` which comes from the expansion of the macro `msg_send_id` (in Nightly builds, run with -Z macro-backtrace for more info)
