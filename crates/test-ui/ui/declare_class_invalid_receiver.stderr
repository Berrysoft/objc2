error[E0277]: the trait bound `Box<CustomObject>: MessageReceiver` is not satisfied
 --> ui/declare_class_invalid_receiver.rs
  |
  | / declare_class!(
  | |     struct CustomObject;
  | |
  | |     unsafe impl ClassType for CustomObject {
... |
  | |     }
  | | );
  | | ^
  | | |
  | |_the trait `MessageReceiver` is not implemented for `Box<CustomObject>`
  |   required by a bound introduced by this call
  |
  = help: the following other types implement trait `MessageReceiver`:
            NonNull<T>
            *const AnyClass
            *const T
            *mut T
            &'a T
            &'a mut T
            &'a AnyClass
  = note: required for `extern "C" fn(Box<CustomObject>, objc2::runtime::Sel)` to implement `MethodImplementation`
note: required by a bound in `ClassBuilderHelper::<T>::add_method`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/declare_class.rs
  |
  |     pub unsafe fn add_method<F>(&mut self, sel: Sel, func: F)
  |                   ---------- required by a bound in this associated function
  |     where
  |         F: MethodImplementation<Callee = T>,
  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `ClassBuilderHelper::<T>::add_method`
  = note: this error originates in the macro `$crate::__declare_class_register_out` which comes from the expansion of the macro `declare_class` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Id<CustomObject>: MessageReceiver` is not satisfied
 --> ui/declare_class_invalid_receiver.rs
  |
  | / declare_class!(
  | |     struct CustomObject;
  | |
  | |     unsafe impl ClassType for CustomObject {
... |
  | |     }
  | | );
  | | ^
  | | |
  | |_the trait `MessageReceiver` is not implemented for `Id<CustomObject>`
  |   required by a bound introduced by this call
  |
  = help: the following other types implement trait `MessageReceiver`:
            NonNull<T>
            *const AnyClass
            *const T
            *mut T
            &'a T
            &'a mut T
            &'a AnyClass
  = note: required for `extern "C" fn(Id<CustomObject>, objc2::runtime::Sel)` to implement `MethodImplementation`
note: required by a bound in `ClassBuilderHelper::<T>::add_method`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/declare_class.rs
  |
  |     pub unsafe fn add_method<F>(&mut self, sel: Sel, func: F)
  |                   ---------- required by a bound in this associated function
  |     where
  |         F: MethodImplementation<Callee = T>,
  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `ClassBuilderHelper::<T>::add_method`
  = note: this error originates in the macro `$crate::__declare_class_register_out` which comes from the expansion of the macro `declare_class` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `CustomObject: MessageReceiver` is not satisfied
 --> ui/declare_class_invalid_receiver.rs
  |
  | / declare_class!(
  | |     struct CustomObject;
  | |
  | |     unsafe impl ClassType for CustomObject {
... |
  | |     }
  | | );
  | | ^
  | | |
  | |_the trait `MessageReceiver` is not implemented for `CustomObject`
  |   required by a bound introduced by this call
  |
  = help: the following other types implement trait `MessageReceiver`:
            NonNull<T>
            *const AnyClass
            *const T
            *mut T
            &'a T
            &'a mut T
            &'a AnyClass
  = note: required for `extern "C" fn(CustomObject, objc2::runtime::Sel)` to implement `MethodImplementation`
note: required by a bound in `ClassBuilderHelper::<T>::add_method`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/declare_class.rs
  |
  |     pub unsafe fn add_method<F>(&mut self, sel: Sel, func: F)
  |                   ---------- required by a bound in this associated function
  |     where
  |         F: MethodImplementation<Callee = T>,
  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `ClassBuilderHelper::<T>::add_method`
  = note: this error originates in the macro `$crate::__declare_class_register_out` which comes from the expansion of the macro `declare_class` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0271]: type mismatch resolving `<extern "C" fn(&AnyClass, Sel) as MethodImplementation>::Callee == CustomObject`
 --> ui/declare_class_invalid_receiver.rs
  |
  | / declare_class!(
  | |     struct CustomObject;
  | |
  | |     unsafe impl ClassType for CustomObject {
... |
  | |     }
  | | );
  | | ^
  | | |
  | |_expected `CustomObject`, found `AnyClass`
  |   required by a bound introduced by this call
  |
note: required by a bound in `ClassBuilderHelper::<T>::add_method`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/declare_class.rs
  |
  |     pub unsafe fn add_method<F>(&mut self, sel: Sel, func: F)
  |                   ---------- required by a bound in this associated function
  |     where
  |         F: MethodImplementation<Callee = T>,
  |                                 ^^^^^^^^^^ required by this bound in `ClassBuilderHelper::<T>::add_method`
  = note: this error originates in the macro `$crate::__declare_class_register_out` which comes from the expansion of the macro `declare_class` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0271]: type mismatch resolving `<extern "C" fn(&NSObject, Sel) as MethodImplementation>::Callee == CustomObject`
 --> ui/declare_class_invalid_receiver.rs
  |
  | / declare_class!(
  | |     struct CustomObject;
  | |
  | |     unsafe impl ClassType for CustomObject {
... |
  | |     }
  | | );
  | | ^
  | | |
  | |_expected `CustomObject`, found `NSObject`
  |   required by a bound introduced by this call
  |
note: required by a bound in `ClassBuilderHelper::<T>::add_method`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/declare_class.rs
  |
  |     pub unsafe fn add_method<F>(&mut self, sel: Sel, func: F)
  |                   ---------- required by a bound in this associated function
  |     where
  |         F: MethodImplementation<Callee = T>,
  |                                 ^^^^^^^^^^ required by this bound in `ClassBuilderHelper::<T>::add_method`
  = note: this error originates in the macro `$crate::__declare_class_register_out` which comes from the expansion of the macro `declare_class` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Box<CustomObject>: MessageReceiver` is not satisfied
 --> ui/declare_class_invalid_receiver.rs
  |
  | / declare_class!(
  | |     struct CustomObject;
  | |
  | |     unsafe impl ClassType for CustomObject {
... |
  | |     }
  | | );
  | | ^
  | | |
  | |_the trait `MessageReceiver` is not implemented for `Box<CustomObject>`
  |   required by a bound introduced by this call
  |
  = help: the following other types implement trait `MessageReceiver`:
            NonNull<T>
            *const AnyClass
            *const T
            *mut T
            &'a T
            &'a mut T
            &'a AnyClass
  = note: required for `extern "C" fn(Box<CustomObject>, objc2::runtime::Sel) -> IdReturnValue` to implement `MethodImplementation`
note: required by a bound in `ClassBuilderHelper::<T>::add_method`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/declare_class.rs
  |
  |     pub unsafe fn add_method<F>(&mut self, sel: Sel, func: F)
  |                   ---------- required by a bound in this associated function
  |     where
  |         F: MethodImplementation<Callee = T>,
  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `ClassBuilderHelper::<T>::add_method`
  = note: this error originates in the macro `$crate::__declare_class_register_out` which comes from the expansion of the macro `declare_class` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Id<CustomObject>: MessageReceiver` is not satisfied
 --> ui/declare_class_invalid_receiver.rs
  |
  | / declare_class!(
  | |     struct CustomObject;
  | |
  | |     unsafe impl ClassType for CustomObject {
... |
  | |     }
  | | );
  | | ^
  | | |
  | |_the trait `MessageReceiver` is not implemented for `Id<CustomObject>`
  |   required by a bound introduced by this call
  |
  = help: the following other types implement trait `MessageReceiver`:
            NonNull<T>
            *const AnyClass
            *const T
            *mut T
            &'a T
            &'a mut T
            &'a AnyClass
  = note: required for `extern "C" fn(Id<CustomObject>, objc2::runtime::Sel) -> IdReturnValue` to implement `MethodImplementation`
note: required by a bound in `ClassBuilderHelper::<T>::add_method`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/declare_class.rs
  |
  |     pub unsafe fn add_method<F>(&mut self, sel: Sel, func: F)
  |                   ---------- required by a bound in this associated function
  |     where
  |         F: MethodImplementation<Callee = T>,
  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `ClassBuilderHelper::<T>::add_method`
  = note: this error originates in the macro `$crate::__declare_class_register_out` which comes from the expansion of the macro `declare_class` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `CustomObject: MessageReceiver` is not satisfied
 --> ui/declare_class_invalid_receiver.rs
  |
  | / declare_class!(
  | |     struct CustomObject;
  | |
  | |     unsafe impl ClassType for CustomObject {
... |
  | |     }
  | | );
  | | ^
  | | |
  | |_the trait `MessageReceiver` is not implemented for `CustomObject`
  |   required by a bound introduced by this call
  |
  = help: the following other types implement trait `MessageReceiver`:
            NonNull<T>
            *const AnyClass
            *const T
            *mut T
            &'a T
            &'a mut T
            &'a AnyClass
  = note: required for `extern "C" fn(CustomObject, objc2::runtime::Sel) -> IdReturnValue` to implement `MethodImplementation`
note: required by a bound in `ClassBuilderHelper::<T>::add_method`
 --> $WORKSPACE/crates/objc2/src/__macro_helpers/declare_class.rs
  |
  |     pub unsafe fn add_method<F>(&mut self, sel: Sel, func: F)
  |                   ---------- required by a bound in this associated function
  |     where
  |         F: MethodImplementation<Callee = T>,
  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `ClassBuilderHelper::<T>::add_method`
  = note: this error originates in the macro `$crate::__declare_class_register_out` which comes from the expansion of the macro `declare_class` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Box<CustomObject>: MessageReceiver` is not satisfied
 --> ui/declare_class_invalid_receiver.rs
  |
  |         fn test_box_id(self: Box<Self>) -> Id<Self> {
  |                              ^^^^^^^^^ the trait `MessageReceiver` is not implemented for `Box<CustomObject>`
  |
  = help: the following other types implement trait `MessageReceiver`:
            NonNull<T>
            *const AnyClass
            *const T
            *mut T
            &'a T
            &'a mut T
            &'a AnyClass
  = note: required for `RetainSemantics<5>` to implement `MessageRecieveId<Box<CustomObject>, Id<CustomObject>>`

error[E0277]: the trait bound `Id<CustomObject>: MessageReceiver` is not satisfied
 --> ui/declare_class_invalid_receiver.rs
  |
  |         fn test_id_self_id(this: Id<Self>) -> Id<Self> {
  |                                  ^^^^^^^^ the trait `MessageReceiver` is not implemented for `Id<CustomObject>`
  |
  = help: the following other types implement trait `MessageReceiver`:
            NonNull<T>
            *const AnyClass
            *const T
            *mut T
            &'a T
            &'a mut T
            &'a AnyClass
  = note: required for `RetainSemantics<5>` to implement `MessageRecieveId<Id<CustomObject>, Id<CustomObject>>`

error[E0277]: the trait bound `CustomObject: MessageReceiver` is not satisfied
 --> ui/declare_class_invalid_receiver.rs
  |
  |         fn test_self_id(this: Self) -> Id<Self> {
  |                               ^^^^ the trait `MessageReceiver` is not implemented for `CustomObject`
  |
  = help: the following other types implement trait `MessageReceiver`:
            NonNull<T>
            *const AnyClass
            *const T
            *mut T
            &'a T
            &'a mut T
            &'a AnyClass
  = note: required for `RetainSemantics<5>` to implement `MessageRecieveId<CustomObject, Id<CustomObject>>`

error[E0277]: the trait bound `Allocated<CustomObject>: MessageReceiver` is not satisfied
 --> ui/declare_class_invalid_receiver.rs
  |
  |         fn test_alloc(this: Allocated<Self>) -> Id<Self> {
  |                             ^^^^^^^^^^^^^^^ the trait `MessageReceiver` is not implemented for `Allocated<CustomObject>`
  |
  = help: the following other types implement trait `MessageReceiver`:
            NonNull<T>
            *const AnyClass
            *const T
            *mut T
            &'a T
            &'a mut T
            &'a AnyClass
  = note: required for `RetainSemantics<5>` to implement `MessageRecieveId<Allocated<CustomObject>, Id<CustomObject>>`

error[E0277]: the trait bound `RetainSemantics<3>: MessageRecieveId<&CustomObject, Id<CustomObject>>` is not satisfied
 --> ui/declare_class_invalid_receiver.rs
  |
  | / declare_class!(
  | |     struct CustomObject;
  | |
  | |     unsafe impl ClassType for CustomObject {
... |
  | |     }
  | | );
  | |_^ the trait `MessageRecieveId<&CustomObject, Id<CustomObject>>` is not implemented for `RetainSemantics<3>`
  |
  = help: the trait `MessageRecieveId<Allocated<T>, Ret>` is implemented for `RetainSemantics<3>`
  = note: this error originates in the macro `$crate::__rewrite_self_param_inner` which comes from the expansion of the macro `declare_class` (in Nightly builds, run with -Z macro-backtrace for more info)
